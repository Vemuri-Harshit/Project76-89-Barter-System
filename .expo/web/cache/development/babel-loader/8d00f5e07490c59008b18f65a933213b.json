{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Documents\\\\harshit\\\\Coding\\\\White hat junior downloads\\\\React\\\\Project76-89-Barter-System\\\\screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport db from \"../config\";\nimport firebase from 'firebase';\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.userLogin = function (email, password) {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        _this.props.navigation.navigate('Request');\n      }).catch(function (error) {\n        var errorCode = error.Code;\n        var errorMessage = error.Message;\n        return alert(errorMessage);\n      });\n    };\n\n    _this.userSignUp = function (emailId, password, confirmPassword) {\n      if (password !== confirmPassword) {\n        return alert(\"passwords don't match, Check your passwords.\");\n      } else {\n        firebase.auth().createUserWithEmailAndPassword(emailId, password).then(function () {\n          db.collection('users').add({\n            first_name: _this.state.firstName,\n            last_name: _this.state.lastName,\n            email_id: _this.state.emailId,\n            address: _this.state.address,\n            contact: _this.state.contact,\n            IsItemRequestActive: false\n          });\n          return alert('User Added Successfully', '', [{\n            text: 'OK',\n            onPress: function onPress() {\n              return _this.setState({\n                \"isModalVisible\": false\n              });\n            }\n          }]);\n        }).catch(function (error) {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          return alert(errorMessage);\n        });\n      }\n    };\n\n    _this.showModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: _this.state.isModalVisible,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.modalContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: '100%'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.KeyboardAvoidingView,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.modalTitle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"Registration\"), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"First Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            firstName: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Last Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            lastName: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Contact\",\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            contact: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Address\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            address: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Email\",\n        keyboardType: 'email-address',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            emailId: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Confrim Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            confirmPassword: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.modalBackButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          return _this.userSignUp(_this.state.emailId, _this.state.password, _this.state.confirmPassword);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Register\"))), React.createElement(View, {\n        style: styles.modalBackButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.cancelButton,\n        onPress: function onPress() {\n          return _this.setState({\n            \"isModalVisible\": false\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#ff5722'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"Cancel\")))))));\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      contact: '',\n      confirmPassword: '',\n      isModalVisible: 'false'\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }), this.showModal(), React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, \"Barter System\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"abc@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.loginBox,\n        secureTextEntry: true,\n        placeholder: \"enter Password\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: [styles.button, {\n          marginBottom: 20,\n          marginTop: 20\n        }],\n        onPress: function onPress() {\n          _this2.userLogin(_this2.state.emailId, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 12\n        }\n      }, \"Login\")), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.setState({\n            isModalVisible: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 12\n        }\n      }, \"SignUp\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#8380B6',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  profileContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 65,\n    fontWeight: '300',\n    paddingBottom: 30,\n    color: '#111D4A'\n  },\n  loginBox: {\n    width: 300,\n    height: 40,\n    borderBottomWidth: 1.5,\n    borderColor: '#ff8a65',\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  },\n  KeyboardAvoidingView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalTitle: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    fontSize: 30,\n    color: '#ff5722',\n    margin: 50\n  },\n  modalContainer: {\n    flex: 1,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"#ffff\",\n    marginRight: 30,\n    marginLeft: 30,\n    marginTop: 80,\n    marginBottom: 80\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  registerButton: {\n    width: 200,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginTop: 30\n  },\n  registerButtonText: {\n    color: '#ff5722',\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  cancelButton: {\n    width: 200,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5\n  },\n  button: {\n    width: 300,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    backgroundColor: \"#ff9800\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.30,\n    shadowRadius: 10.32,\n    elevation: 16,\n    padding: 10\n  },\n  buttonText: {\n    color: '#ffff',\n    fontWeight: '200',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/dell/OneDrive/Documents/harshit/Coding/White hat junior downloads/React/Project76-89-Barter-System/screens/LoginScreen.js"],"names":["React","Component","db","firebase","LoginScreen","userLogin","email","password","auth","signInWithEmailAndPassword","then","props","navigation","navigate","catch","error","errorCode","Code","errorMessage","Message","alert","userSignUp","emailId","confirmPassword","createUserWithEmailAndPassword","collection","add","first_name","state","firstName","last_name","lastName","email_id","address","contact","IsItemRequestActive","text","onPress","setState","code","message","showModal","isModalVisible","styles","modalContainer","width","KeyboardAvoidingView","modalTitle","formTextInput","modalBackButton","registerButton","registerButtonText","cancelButton","color","container","justifyContent","alignItems","title","loginBox","button","marginBottom","marginTop","buttonText","StyleSheet","create","flex","backgroundColor","profileContainer","fontSize","fontWeight","paddingBottom","height","borderBottomWidth","borderColor","margin","paddingLeft","alignSelf","borderRadius","marginRight","marginLeft","borderWidth","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{Component}from 'react';\r\nimport {View,Text,TextInput,Modal,KeyboardAvoidingView,StyleSheet,TouchableOpacity,Alert,ScrollView} from 'react-native';\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\n\r\nexport default class LoginScreen extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            email: '',\r\n            password:'',\r\n            firstName:'',\r\n            lastName:'',\r\n            address:'',\r\n            contact:'',\r\n            confirmPassword:'',\r\n            isModalVisible:'false'\r\n        }\r\n    }\r\n\r\n    userLogin=(email,password)=>{\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(()=>{this.props.navigation.navigate('Request')})\r\n        .catch((error)=>{\r\n            var errorCode = error.Code\r\n            var errorMessage = error.Message\r\n            return alert(errorMessage)\r\n        })  \r\n    } \r\n\r\n    userSignUp = (emailId, password,confirmPassword) =>{\r\n        if(password !== confirmPassword){\r\n            return alert(\"passwords don't match, Check your passwords.\")\r\n        }else{\r\n          firebase.auth().createUserWithEmailAndPassword(emailId, password)\r\n          .then(()=>{\r\n            db.collection('users').add({\r\n              first_name:this.state.firstName,\r\n              last_name:this.state.lastName,\r\n              email_id:this.state.emailId,\r\n              address:this.state.address,\r\n              contact:this.state.contact,\r\n              IsItemRequestActive : false,\r\n            })\r\n            return alert( 'User Added Successfully','',[ {text: 'OK', onPress: () => this.setState({\"isModalVisible\" : false})},]);\r\n          })\r\n          .catch((error)=> {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            return alert(errorMessage)\r\n          });\r\n        }\r\n      }\r\n\r\n      showModal = ()=>{\r\n        return(\r\n        <Modal animationType=\"fade\" transparent={true} visible={this.state.isModalVisible} >\r\n          <View style={styles.modalContainer}>\r\n \r\n            <ScrollView style={{width:'100%'}}>\r\n              <KeyboardAvoidingView style={styles.KeyboardAvoidingView}>\r\n \r\n              <Text style={styles.modalTitle}>Registration</Text>\r\n              <TextInput style={styles.formTextInput} placeholder ={\"First Name\"} maxLength ={8} onChangeText={(text)=>{this.setState({firstName:text})}} />                 \r\n              <TextInput style={styles.formTextInput} placeholder ={\"Last Name\"}  maxLength ={8} onChangeText={(text)=>{ this.setState({lastName: text})}}/>                     \r\n              <TextInput style={styles.formTextInput} placeholder ={\"Contact\"}    maxLength ={10} keyboardType={'numeric'} onChangeText={(text)=>{ this.setState({contact: text})}}/>    \r\n              <TextInput style={styles.formTextInput} placeholder ={\"Address\"}    multiline = {true} onChangeText={(text)=>{this.setState({address: text})}}/>                         \r\n              <TextInput style={styles.formTextInput} placeholder ={\"Email\"}      keyboardType ={'email-address'} onChangeText={(text)=>{this.setState({emailId: text})}}/>                      \r\n              <TextInput style={styles.formTextInput} placeholder ={\"Password\"}   secureTextEntry = {true} onChangeText={(text)=>{this.setState({password: text})}}/>                          \r\n              <TextInput style={styles.formTextInput} placeholder ={\"Confrim Password\"} secureTextEntry = {true} onChangeText={(text)=>{this.setState({confirmPassword: text})}}/>\r\n              \r\n              <View style={styles.modalBackButton}>\r\n\r\n                <TouchableOpacity style={styles.registerButton} onPress={()=>this.userSignUp(this.state.emailId, this.state.password, this.state.confirmPassword)}>\r\n                <Text style={styles.registerButtonText}>Register</Text>\r\n                </TouchableOpacity>\r\n\r\n              </View>\r\n\r\n              <View style={styles.modalBackButton}> \r\n\r\n                <TouchableOpacity style={styles.cancelButton} onPress={()=>this.setState({\"isModalVisible\":false})}>\r\n                <Text style={{color:'#ff5722'}}>Cancel</Text>\r\n                </TouchableOpacity>\r\n\r\n              </View>\r\n\r\n              </KeyboardAvoidingView>\r\n            </ScrollView>\r\n          </View>\r\n        </Modal>\r\n      )\r\n      }\r\n      \r\n render(){\r\n    return(\r\n      <View style={styles.container}>\r\n        <View style={{justifyContent: 'center',alignItems: 'center'}}>\r\n\r\n        </View>\r\n          {\r\n            this.showModal()\r\n          }\r\n        <View style={{justifyContent:'center', alignItems:'center'}}>\r\n          \r\n          <Text style={styles.title}>Barter System</Text>\r\n\r\n        </View>\r\n\r\n        <View>\r\n\r\n          <TextInput style={styles.loginBox} placeholder=\"abc@example.com\" keyboardType ='email-address' onChangeText={(text)=>{this.setState({emailId: text})}}/>                                  \r\n          <TextInput style={styles.loginBox} secureTextEntry = {true} placeholder=\"enter Password\" onChangeText={(text)=>{ this.setState({password: text})}}/>\r\n      \r\n        <TouchableOpacity style={[styles.button,{marginBottom:20, marginTop:20}]} onPress = {()=>{this.userLogin(this.state.emailId, this.state.password)}}>                       \r\n           <Text style={styles.buttonText}>Login</Text>\r\n         </TouchableOpacity>\r\n\r\n         <TouchableOpacity style={styles.button} onPress={()=>this.setState({ isModalVisible:true})}>\r\n           <Text style={styles.buttonText}>SignUp</Text>\r\n         </TouchableOpacity>\r\n\r\n      </View>\r\n    </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n     flex:1,\r\n     backgroundColor:'#8380B6',\r\n     alignItems: 'center',\r\n     justifyContent: 'center'\r\n   },\r\n   profileContainer:{\r\n     flex:1,\r\n     justifyContent:'center',\r\n     alignItems:'center',\r\n   },\r\n   title :{\r\n     fontSize:65,\r\n     fontWeight:'300',\r\n     paddingBottom:30,\r\n     color : '#111D4A'\r\n   },\r\n   loginBox:{\r\n     width: 300,\r\n     height: 40,\r\n     borderBottomWidth: 1.5,\r\n     borderColor : '#ff8a65',\r\n     fontSize: 20,\r\n     margin:10,\r\n     paddingLeft:10\r\n   },\r\n   KeyboardAvoidingView:{\r\n     flex:1,\r\n     justifyContent:'center',\r\n     alignItems:'center'\r\n   },\r\n   modalTitle :{\r\n     justifyContent:'center',\r\n     alignSelf:'center',\r\n     fontSize:30,\r\n     color:'#ff5722',\r\n     margin:50\r\n   },\r\n   modalContainer:{\r\n     flex:1,\r\n     borderRadius:20,\r\n     justifyContent:'center',\r\n     alignItems:'center',\r\n     backgroundColor:\"#ffff\",\r\n     marginRight:30,\r\n     marginLeft : 30,\r\n     marginTop:80,\r\n     marginBottom:80,\r\n   },\r\n   formTextInput:{\r\n     width:\"75%\",\r\n     height:35,\r\n     alignSelf:'center',\r\n     borderColor:'#ffab91',\r\n     borderRadius:10,\r\n     borderWidth:1,\r\n     marginTop:20,\r\n     padding:10\r\n   },\r\n   registerButton:{\r\n     width:200,\r\n     height:40,\r\n     alignItems:'center',\r\n     justifyContent:'center',\r\n     borderWidth:1,\r\n     borderRadius:10,\r\n     marginTop:30\r\n   },\r\n   registerButtonText:{\r\n     color:'#ff5722',\r\n     fontSize:15,\r\n     fontWeight:'bold'\r\n   },\r\n   cancelButton:{\r\n     width:200,\r\n     height:30,\r\n     justifyContent:'center',\r\n     alignItems:'center',\r\n     marginTop:5,\r\n   },\r\n  \r\n   button:{\r\n     width:300,\r\n     height:50,\r\n     justifyContent:'center',\r\n     alignItems:'center',\r\n     borderRadius:25,\r\n     backgroundColor:\"#ff9800\",\r\n     shadowColor: \"#000\",\r\n     shadowOffset: {\r\n        width: 0,\r\n        height: 8,\r\n     },\r\n     shadowOpacity: 0.30,\r\n     shadowRadius: 10.32,\r\n     elevation: 16,\r\n     padding: 10\r\n   },\r\n   buttonText:{\r\n     color:'#ffff',\r\n     fontWeight:'200',\r\n     fontSize:20\r\n   }\r\n  })"]},"metadata":{},"sourceType":"module"}