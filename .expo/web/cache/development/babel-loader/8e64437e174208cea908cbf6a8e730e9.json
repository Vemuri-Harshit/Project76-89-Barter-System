{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Documents\\\\harshit\\\\Coding\\\\White hat junior downloads\\\\React\\\\Project76-89-Barter-System\\\\screens\\\\RequestScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ListItem } from 'react-native-elements';\nimport db from \"../config\";\nimport firebase from 'firebase';\nimport MyHeader from \"../components/MyHeader\";\nimport { TouchableHighlightBase } from \"react-native-web/dist/index\";\n\nvar RequestScreen = function (_Component) {\n  _inherits(RequestScreen, _Component);\n\n  var _super = _createSuper(RequestScreen);\n\n  function RequestScreen() {\n    var _this;\n\n    _classCallCheck(this, RequestScreen);\n\n    _this = _super.call(this);\n\n    _this.addRequest = function _callee(itemName, reason) {\n      var userId, randomRequestId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = _this.state.userId;\n              randomRequestId = _this.createUniqueId();\n              db.collection('requested_items').add({\n                \"user_id\": userId,\n                \"item_name\": itemName,\n                \"reason\": reason,\n                \"request_id\": randomRequestId,\n                \"item_status\": \"requested\",\n                \"date\": firebase.firestore.FieldValue.serverTimestamp()\n              });\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_this.getItemRequest());\n\n            case 5:\n              db.collection('users').where(\"email_id\", \"==\", userId).get().then().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  db.collection('users').doc(doc.id).update({\n                    IsItemRequestActive: true\n                  });\n                });\n              });\n\n              _this.setState({\n                itemName: '',\n                reason: '',\n                requestId: randomRequestId\n              });\n\n              return _context.abrupt(\"return\", Alert.alert(\"Item Requested Successfully\"));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.recievedItems = function (itemName) {\n      var userId = _this.state.userId;\n      var requestId = _this.state.requestId;\n      db.collection('recieved_items').add({\n        \"user_id\": userId,\n        \"item_name\": itemName,\n        \"request_id\": requestId,\n        \"item_status\": \"received\"\n      });\n    };\n\n    _this.getItemRequest = function () {\n      var itemRequest = db.collection('requested_items').where('user_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().item_status !== \"recieved\") {\n            _this.setState({\n              requestId: doc.data().request_id,\n              requestedItemName: doc.data().item_name,\n              itemStatus: doc.data().item_status,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection('all_notifications').where('request_id', '==', _this.state.requestId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var itemName = doc.data().item_name;\n              db.collection('all_notifications').add({\n                \"targeted_user_id\": donorId,\n                \"message\": name + \" \" + lastName + \" received the item \" + itemName,\n                \"notification_status\": \"unread\",\n                \"item_name\": itemName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.updateItemRequestStatus = function () {\n      db.collection('requested_items').doc(_this.state.docId).update({\n        item_status: 'recieved'\n      });\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsItemRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(TouchableHighlight, {\n        activeOpacity: 0.6,\n        underlayColor: \"#dddddd\",\n        onPress: function onPress() {\n          _this.setState({\n            itemName: item.volumeInfo.title\n          });\n        },\n        bottomDivider: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 3\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 5\n        }\n      }, item.volumeInfo.title));\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      itemName: \"\",\n      reason: \"\",\n      IsItemRequestActive: \"\",\n      requestedItemName: \"\",\n      itemStatus: \"\",\n      requestId: \"\",\n      userDocId: '',\n      docId: '',\n      imageLink: '',\n      dataSource: '',\n      showFlatlist: false\n    };\n    return _this;\n  }\n\n  _createClass(RequestScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsItemRequestActive\",\n    value: function getIsItemRequestActive() {\n      var _this2 = this;\n\n      db.collection('users').where('email_id', '==', this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsItemRequestActive: doc.data().IsItemRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getItemRequest();\n      this.getIsItemRequestActive();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.IsItemRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }\n        }, \"Item Name\"), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }\n        }, this.state.requestedItemName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }\n        }, \"Item Status \"), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }\n        }, this.state.itemStatus)), React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'orange',\n            backgroundColor: \"orange\",\n            width: 300,\n            alignSelf: 'center',\n            alignItems: 'center',\n            height: 30,\n            marginTop: 30\n          },\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateItemRequestStatus();\n\n            _this3.recievedItems(_this3.state.requesteItemName);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }\n        }, \"I recieved the item \")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 7\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Request Items\",\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 7\n          }\n        }), React.createElement(KeyboardAvoidingView, {\n          style: styles.keyBoardStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 12\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"Item\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              itemName: text\n            });\n          },\n          value: this.state.item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 16\n          }\n        }), React.createElement(TextInput, {\n          style: (styles.formTextInput, {\n            height: 300\n          }),\n          placeholder: \"Why Do You want this Item\",\n          multiline: true,\n          numberOfLines: 8,\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              reason: text\n            });\n          },\n          value: this.state.reason,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 16\n          }\n        })), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this3.addRequest(_this3.state.itemName, _this3.state.reason);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 16\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 129\n          }\n        }, \"Request\")))));\n      }\n    }\n  }]);\n\n  return RequestScreen;\n}(Component);\n\nexport { RequestScreen as default };\nvar styles = StyleSheet.create({\n  keyBoardStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#8380B6',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/dell/OneDrive/Documents/harshit/Coding/White hat junior downloads/React/Project76-89-Barter-System/screens/RequestScreen.js"],"names":["React","Component","ListItem","db","firebase","MyHeader","TouchableHighlightBase","RequestScreen","addRequest","itemName","reason","userId","state","randomRequestId","createUniqueId","collection","add","firestore","FieldValue","serverTimestamp","getItemRequest","where","get","then","snapshot","forEach","doc","id","update","IsItemRequestActive","setState","requestId","Alert","alert","recievedItems","itemRequest","data","item_status","request_id","requestedItemName","item_name","itemStatus","docId","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","updateItemRequestStatus","renderItem","item","i","volumeInfo","title","auth","currentUser","email","userDocId","imageLink","dataSource","showFlatlist","Math","random","toString","substring","onSnapshot","querySnapshot","getIsItemRequestActive","flex","justifyContent","borderColor","borderWidth","alignItems","padding","margin","backgroundColor","width","alignSelf","height","marginTop","requesteItemName","props","navigation","styles","keyBoardStyle","formTextInput","text","button","StyleSheet","create","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  FlatList,\r\n  TouchableHighlight,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert} from 'react-native';\r\nimport {ListItem} from 'react-native-elements'\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\nimport MyHeader from '../components/MyHeader'\r\nimport { TouchableHighlightBase } from 'react-native';\r\n\r\nexport default class RequestScreen extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state ={\r\n      userId : firebase.auth().currentUser.email,\r\n      itemName:\"\",\r\n      reason:\"\",\r\n      IsItemRequestActive : \"\",\r\n      requestedItemName: \"\",\r\n      itemStatus:\"\",\r\n      requestId:\"\",\r\n      userDocId: '',\r\n      docId :'',\r\n      imageLink:'',\r\n      dataSource:'',\r\n      showFlatlist:false\r\n    }\r\n  }\r\n\r\n  createUniqueId(){\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n\r\n\r\n\r\n  addRequest = async (itemName,reason)=>{\r\n    var userId = this.state.userId\r\n    var randomRequestId = this.createUniqueId();\r\n    db.collection('requested_items').add({\r\n        \"user_id\": userId,\r\n        \"item_name\":itemName,\r\n        \"reason\":reason,\r\n        \"request_id\"  : randomRequestId,\r\n        \"item_status\" : \"requested\",\r\n         \"date\"       : firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n\r\n    await  this.getItemRequest()\r\n    db.collection('users').where(\"email_id\",\"==\",userId).get()\r\n    .then()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((doc)=>{\r\n        db.collection('users').doc(doc.id).update({\r\n      IsItemRequestActive: true\r\n      })\r\n    })\r\n  })\r\n\r\n    this.setState({\r\n        itemName :'',\r\n        reason : '',\r\n        requestId: randomRequestId\r\n    })\r\n\r\n    return Alert.alert(\"Item Requested Successfully\")\r\n\r\n\r\n  }\r\n\r\nrecievedItems=(itemName)=>{\r\n  var userId = this.state.userId\r\n  var requestId = this.state.requestId\r\n  db.collection('recieved_items').add({\r\n      \"user_id\": userId,\r\n      \"item_name\":itemName,\r\n      \"request_id\"  : requestId,\r\n      \"item_status\"  : \"received\",\r\n\r\n  })\r\n}\r\n\r\ngetIsItemRequestActive(){\r\n  db.collection('users')\r\n  .where('email_id','==',this.state.userId)\r\n  .onSnapshot(querySnapshot => {\r\n    querySnapshot.forEach(doc => {\r\n      this.setState({\r\n        IsItemRequestActive:doc.data().IsItemRequestActive,\r\n        userDocId : doc.id\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n\r\ngetItemRequest =()=>{\r\n  // getting the requested book\r\nvar itemRequest=  db.collection('requested_items')\r\n  .where('user_id','==',this.state.userId)\r\n  .get()\r\n  .then((snapshot)=>{\r\n    snapshot.forEach((doc)=>{\r\n      if(doc.data().item_status !== \"recieved\"){\r\n        this.setState({\r\n          requestId : doc.data().request_id,\r\n          requestedItemName: doc.data().item_name,\r\n          itemStatus:doc.data().item_status,\r\n          docId     : doc.id\r\n        })\r\n      }\r\n    })\r\n})}\r\n\r\n\r\n\r\nsendNotification=()=>{\r\n  //to get the first name and last name\r\n  db.collection('users').where('email_id','==',this.state.userId).get()\r\n  .then((snapshot)=>{\r\n    snapshot.forEach((doc)=>{\r\n      var name = doc.data().first_name\r\n      var lastName = doc.data().last_name\r\n\r\n      // to get the donor id and book nam\r\n      db.collection('all_notifications').where('request_id','==',this.state.requestId).get()\r\n      .then((snapshot)=>{\r\n        snapshot.forEach((doc) => {\r\n          var donorId  = doc.data().donor_id\r\n          var itemName =  doc.data().item_name\r\n\r\n          //targert user id is the donor id to send notification to the user\r\n          db.collection('all_notifications').add({\r\n            \"targeted_user_id\" : donorId,\r\n            \"message\" : name +\" \" + lastName + \" received the item \" + itemName ,\r\n            \"notification_status\" : \"unread\",\r\n            \"item_name\" : itemName\r\n          })\r\n        })\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.getItemRequest()\r\n  this.getIsItemRequestActive()\r\n\r\n}\r\n\r\nupdateItemRequestStatus=()=>{\r\n  //updating the book status after receiving the item\r\n  db.collection('requested_items').doc(this.state.docId)\r\n  .update({\r\n    item_status : 'recieved'\r\n  })\r\n\r\n  //getting the  doc id to update the users doc\r\n  db.collection('users').where('email_id','==',this.state.userId).get()\r\n  .then((snapshot)=>{\r\n    snapshot.forEach((doc) => {\r\n      //updating the doc\r\n      db.collection('users').doc(doc.id).update({\r\n        IsItemRequestActive: false\r\n      })\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\nrenderItem=({item,i})=>{\r\n  return(\r\n  <TouchableHighlight \r\n      activeOpacity = {0.6}\r\n      underlayColor = '#dddddd'\r\n      onPress={()=>{\r\n      this.setState({\r\n          itemName:item.volumeInfo.title\r\n        })\r\n      }}\r\n      bottomDivider\r\n  >\r\n      \r\n    <Text>{item.volumeInfo.title}</Text>\r\n  </TouchableHighlight>\r\n  )\r\n}\r\n\r\n  render(){\r\n\r\n    if(this.state.IsItemRequestActive === true){\r\n      return(\r\n\r\n        // Status screen\r\n\r\n        <View style = {{flex:1,justifyContent:'center'}}>\r\n          <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n          <Text>Item Name</Text>\r\n          <Text>{this.state.requestedItemName}</Text>\r\n          </View>\r\n          <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n          <Text>Item Status </Text>\r\n\r\n          <Text>{this.state.itemStatus}</Text>\r\n          </View>\r\n\r\n          <TouchableOpacity style={{borderWidth:1,borderColor:'orange',backgroundColor:\"orange\",width:300,alignSelf:'center',alignItems:'center',height:30,marginTop:30}}\r\n          onPress={()=>{\r\n            this.sendNotification()\r\n            this.updateItemRequestStatus();\r\n            this.recievedItems(this.state.requesteItemName)\r\n          }}>\r\n          <Text>I recieved the item </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )\r\n    }\r\n    else\r\n    {\r\n    return(\r\n      // Form screen\r\n      <View style = {{flex:1}}>\r\n      <MyHeader title = \"Request Items\" navigation ={this.props.navigation}/>\r\n      <KeyboardAvoidingView style ={styles.keyBoardStyle}>\r\n\r\n           <View>\r\n               <TextInput style ={styles.formTextInput} placeholder = \"Item\" onChangeText = {(text)=>{this.setState({itemName: text})}} value = {this.state.item}/>\r\n               <TextInput style ={styles.formTextInput, {height:300}} placeholder = \"Why Do You want this Item\" multiline numberOfLines = {8} onChangeText = {(text)=>{this.setState({reason: text})}} value = {this.state.reason}/>\r\n           </View>\r\n\r\n           <View>\r\n               <TouchableOpacity style ={styles.button} onPress={()=>{this.addRequest(this.state.itemName, this.state.reason)}}><Text>Request</Text></TouchableOpacity>\r\n           </View>\r\n\r\n      </KeyboardAvoidingView>\r\n   </View>\r\n    )\r\n  }\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  keyBoardStyle : {\r\n    flex:1,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  formTextInput:{\r\n    width:\"75%\",\r\n    height:35,\r\n    alignSelf:'center',\r\n    borderColor:'#8380B6',\r\n    borderRadius:10,\r\n    borderWidth:1,\r\n    marginTop:20,\r\n    padding:10,\r\n  },\r\n  button:{\r\n    width:\"75%\",\r\n    height:50,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    borderRadius:10,\r\n    backgroundColor:\"#ff5722\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n       width: 0,\r\n       height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    marginTop:20\r\n    },\r\n  }\r\n)"]},"metadata":{},"sourceType":"module"}